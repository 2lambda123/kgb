#!/system/bin/sh
echo "zram settings manager
"

# Get RAM size in KB
RAMSIZE=`grep MemTotal /proc/meminfo | awk '{ print \$2 }'`
# zram size is set in bytes; 1024 * 12.5% = 128
ZRAMSIZE=$(($RAMSIZE*128))
INITSCRIPT_PATH=/system/etc/init.d/05zram

show_options() {
echo "Usage: zram [OPTION]
Valid options:

  enable    Install boot script
            Enable zram
  disable   Remove boot script
            Disable zram
  show      Show current status

Example: zram show
"
}

show_status() {
echo "Current status:

zram is compressed swap; numbers are in KB

             total         used         free"
free | tail -1
echo ""
}

write_initscript() {
if [ ! -d /system/etc/init.d ]; then
	mkdir /system/etc/init.c
fi
echo "#!/system/bin/sh
echo 1 > /sys/block/zram0/reset
echo $1 > /sys/block/zram0/disksize
mkswap /dev/block/zram0
swapon /dev/block/zram0" > $2
chown 0:0 $2
chmod 755 $2
}

mount_system_rw() {
mount -o rw,remount /system /system
}
mount_system_ro() {
mount -o ro,remount /system /system
}

if [ -e /dev/block/zram0 ]; then
	if [ $1 ]; then
		if [ $1 == "enable" ]; then
			mount_system_rw
			write_initscript $ZRAMSIZE $INITSCRIPT_PATH
			mount_system_ro
			echo "Boot script installed."

			$INITSCRIPT_PATH
			echo "zram enabled."

			echo ""
		elif [ $1 == "disable" ]; then
			swapoff /dev/block/zram0 >/dev/null 2>&1
			echo 1 > /sys/block/zram0/reset >/dev/null 2>&1
			echo "zram disabled."

			if [ -e $INITSCRIPT_PATH ]; then
				mount_system_rw
				rm $INITSCRIPT_PATH
				mount_system_ro
				echo "Boot script removed."
			else
				echo "Boot script not found. No need to remove."
			fi
			mount_system_ro

			echo ""
		elif [ $1 == "show" ]; then
			show_status
		else
			echo "Unrecognized option."
			echo ""
			show_options
		fi
	else
	show_options
	fi
else
echo "Kernel does not support zram."
fi
